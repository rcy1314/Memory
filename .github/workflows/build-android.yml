name: Build Android App

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
          
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android
          
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './web/src-tauri -> target'
          
      - name: Install Android NDK
        run: |
          sdkmanager "ndk;25.2.9519653"
          echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
          
      - name: Install frontend dependencies
        working-directory: ./web
        run: npm ci
        
      - name: Build frontend
        working-directory: ./web
        run: npm run build
        
      - name: Install Tauri CLI
        run: cargo install tauri-cli --version "^2.0"
        
      - name: Initialize Tauri Android project
        working-directory: ./web
        run: |
          echo "Initializing Tauri Android project..."
          cargo tauri android init
          echo "Android project initialization completed"
          ls -la src-tauri/gen/ || echo "gen directory not found"
          ls -la src-tauri/gen/android/ || echo "android directory not found"
          
      - name: Build Android APK (ARM64)
        working-directory: ./web
        run: |
          cargo tauri android build --target aarch64
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          ANDROID_NDK_ROOT: ${{ env.ANDROID_NDK_ROOT }}
          
      - name: Build Android APK (ARMv7)
        working-directory: ./web
        run: |
          cargo tauri android build --target armv7
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          ANDROID_NDK_ROOT: ${{ env.ANDROID_NDK_ROOT }}
          
      - name: Build Android APK (x86_64)
        working-directory: ./web
        run: |
          cargo tauri android build --target x86_64
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          ANDROID_NDK_ROOT: ${{ env.ANDROID_NDK_ROOT }}
          
      - name: Upload Android APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: |
            web/src-tauri/gen/android/app/build/outputs/apk/**/*.apk
          retention-days: 30
          
  release-android:
    needs: build-android
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: android-artifacts
          
      - name: Create Android Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            android-artifacts/**/*.apk
          draft: false
          prerelease: false
          generate_release_notes: true
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}