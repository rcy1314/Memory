name: Build Multi-Platform Desktop App

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
        include:
          - platform: macos-latest
            os: macos
            arch: universal
            ext: dmg
          - platform: ubuntu-20.04
            os: linux
            arch: amd64
            ext: AppImage
          - platform: windows-latest
            os: windows
            arch: x64
            ext: msi
    
    runs-on: ${{ matrix.platform }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
          
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || matrix.platform == 'ubuntu-20.04' && 'x86_64-unknown-linux-gnu' || 'x86_64-pc-windows-msvc' }}
          
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './web/src-tauri -> target'
          
      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt update
          sudo apt install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
          
      - name: Install frontend dependencies
        working-directory: ./web
        run: npm ci
        
      - name: Build frontend
        working-directory: ./web
        run: npm run build
        
      - name: Build Tauri app (macOS Universal)
        if: matrix.platform == 'macos-latest'
        working-directory: ./web
        run: |
          npm run tauri build -- --target universal-apple-darwin || {
            echo "Universal build failed, trying x86_64 build..."
            npm run tauri build -- --target x86_64-apple-darwin
          }
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          
      - name: Build Tauri app (Linux)
        if: matrix.platform == 'ubuntu-20.04'
        working-directory: ./web
        run: npm run tauri build
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          
      - name: Build Tauri app (Windows)
        if: matrix.platform == 'windows-latest'
        working-directory: ./web
        run: npm run tauri build -- --bundles nsis
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          
      - name: Upload artifacts (macOS)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: |
            web/src-tauri/target/*/release/bundle/dmg/*.dmg
            web/src-tauri/target/*/release/bundle/macos/*.app
          retention-days: 30
          
      - name: Upload artifacts (Linux)
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/upload-artifact@v4
        with:
          name: linux-app
          path: |
            web/src-tauri/target/release/bundle/appimage/*.AppImage
            web/src-tauri/target/release/bundle/deb/*.deb
            web/src-tauri/target/release/memory-app
          retention-days: 30
          
      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: |
            web/src-tauri/target/release/bundle/nsis/*.exe
            web/src-tauri/target/release/memory-app.exe
          retention-days: 30
          
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/windows-app/**/*
            artifacts/macos-app/**/*
            artifacts/linux-app/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}