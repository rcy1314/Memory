# 多阶段构建：前端构建阶段
FROM node:18-alpine AS frontend-builder

WORKDIR /app/web

# 复制前端代码
COPY web/package*.json ./
RUN npm ci --only=production

COPY web/ ./
RUN npm run build

# 后端运行阶段
FROM python:3.11.13-slim AS backend

# 设置时区
RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo 'Asia/Shanghai' >/etc/timezone

WORKDIR /app

# 复制后端代码
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# 安装mangum用于ASGI适配
RUN pip install mangum

COPY . .

# 从前端构建阶段复制构建产物
COPY --from=frontend-builder /app/dist ./dist

# 创建健康检查端点
RUN echo 'from fastapi import APIRouter\nrouter = APIRouter()\n@router.get("/health")\ndef health_check():\n    return {"status": "ok"}' > app/api/v1/health.py

# 修改run.py以支持Fly.io
RUN echo 'import uvicorn\nimport os\n\nif __name__ == "__main__":\n    port = int(os.environ.get("PORT", 8080))\n    uvicorn.run(\n        "app:app",\n        host="0.0.0.0",\n        port=port,\n        reload=False,\n        log_config="uvicorn_loggin_config.json",\n    )' > run.py

EXPOSE 8080

CMD ["python", "run.py"]